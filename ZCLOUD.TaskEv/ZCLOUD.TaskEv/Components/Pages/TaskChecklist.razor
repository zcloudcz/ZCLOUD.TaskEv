@inject IDbContextFactory<ApplicationDbContext> ContextFactory

<div class="checklist-container">
    <div class="mb-3">
        <div class="input-group">
            <input type="text" class="form-control" @bind="newItemDescription" placeholder="Nová položka..." />
            <input type="date" class="form-control" @bind="newItemDeadline" />
            <button class="btn btn-primary" @onclick="AddChecklistItem"
                    disabled="@string.IsNullOrWhiteSpace(newItemDescription)">
                Přidat
            </button>
        </div>
    </div>

    <div class="checklist-items">
        @foreach (var item in checklistItems.OrderBy(i => i.Deadline))
        {
            <div class="checklist-item mb-2 p-2 border rounded @(IsOverdue(item) ? "border-danger" : "")">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input"
                               checked="@item.IsCompleted"
                               @onchange="@(e => ToggleItemCompletion(item))" />
                        <label class="form-check-label @(item.IsCompleted ? "text-decoration-line-through" : "")">
                            @item.Description
                        </label>
                    </div>
                    <div class="btn-group">
                        @if (item.Deadline.HasValue)
                        {
                            <span class="badge @(IsOverdue(item) ? "bg-danger" : "bg-info")">
                                @item.Deadline.Value.ToShortDateString()
                            </span>
                        }
                        <button class="btn btn-sm btn-danger ms-2" @onclick="() => DeleteChecklistItem(item)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

